controller:
  replicas: 2
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  ## service type and annotations are ignored if external access is disabled
  service:
    ## used to override the service type for controller
    type:
    annotations: {}
  jvmOptions: ["-Xms512m", "-XX:+ExitOnOutOfMemoryError", "-XX:+CrashOnOutOfMemoryError", "-XX:+HeapDumpOnOutOfMemoryError", "-XX:HeapDumpPath=/tmp/dumpfile/heap", "-XX:MaxRAMPercentage=50.0", "-XX:+UseContainerSupport", "-XX:+PrintExtendedThreadInfo"]

segmentStore:
  replicas: 2
  secret: {}
    # name:
    # path:
  env:
  resources:
    requests:
      cpu: 2000m
      memory: 8Gi
    limits:
      cpu: 4000m
      memory: 8Gi
  ## service type and annotations are ignored if external access is disabled
  service:
    ## used to override the service type for segmentStore
    type:
    annotations: {}
  jvmOptions: ["-Xms1536m", "-Xmx3g", "-XX:MaxDirectMemorySize=4g", "-XX:+ExitOnOutOfMemoryError", "-XX:+CrashOnOutOfMemoryError", "-XX:+HeapDumpOnOutOfMemoryError", "-XX:HeapDumpPath=/tmp/dumpfile/heap", "-XX:MaxRAMPercentage=50.0", "-XX:+UseContainerSupport", "-XX:+PrintExtendedThreadInfo"]

options:
  bookkeeper.ensemble.size: "3"
  bookkeeper.write.quorum.size: "3"
  bookkeeper.ack.quorum.size: "3"
  bookkeeper.write.timeout.milliseconds: "60000"
  bookkeeper.write.outstanding.bytes.max: "33554432"
  pravegaservice.cache.size.max: "2147483648"
  pravegaservice.cache.time.seconds.max: "600"
  hdfs.block.size: "67108864"
  writer.flush.threshold.bytes: "67108864"
  writer.flush.size.bytes.max: "67108864"
  pravegaservice.container.count: "16"
  controller.container.count: "16"
  controller.retention.bucket.count: "10"
  controller.service.asyncTaskPool.size: "20"
  controller.retention.thread.count: "4"
  log.level: "INFO"
  emptyDirVolumeMounts: "heap-dump=/tmp/dumpfile/heap,logs=/opt/pravega/logs"
  ## The following parameters are only useful if you are going to deploy metrics in this cluster.
  # metrics.dynamicCache.size: "100000"
  # metrics.statistics.enable: "true"
  # metrics.statsD.reporter.enable: "false"
  # metrics.statsD.connect.host: "telegraph.default"
  # metrics.statsD.connect.port: "8125"
  # metrics.influxDB.reporter.enable: "true"
  # metrics.output.frequency.seconds: "10"
  # metrics.influxDB.connect.uri: "http://INFLUXDB-IP:8086"
  # controller.metrics.dynamicCache.size: "100000"
  # controller.metrics.statistics.enable: "true"
  # controller.metrics.statsD.reporter.enable: "false"
  # controller.metrics.statsD.connect.host: "telegraph.default"
  # controller.metrics.statsD.connect.port: "8125"
  # controller.metrics.influxDB.reporter.enable: "true"
  # controller.metrics.output.frequency.seconds: "10"
  # controller.metrics.influxDB.connect.uri: "http://INFLUXDB-IP:8086"
