kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
rules:
- apiGroups:
  - bookkeeper.pravega.io
  resources:
  - "*"
  verbs:
  - get

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
subjects:
- kind: ServiceAccount
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  namespace: {{.Release.Namespace}}
roleRef:
  kind: Role
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
data:
  validations.sh: |
    #!/bin/sh
    set -e
    sleep 30

    replicas=`kubectl get BookkeeperCluster -n {{ .Release.Namespace }} {{ template "bookkeeper.fullname" . }} -o jsonpath='{.status.replicas}'`
    readyReplicas=`kubectl get BookkeeperCluster -n {{ .Release.Namespace }} {{ template "bookkeeper.fullname" . }} -o jsonpath='{.status.readyReplicas}'`
    currentVersion=`kubectl get BookkeeperCluster -n {{ .Release.Namespace }} {{ template "bookkeeper.fullname" . }} -o jsonpath='{.status.currentVersion}'`
    targetVersion=`kubectl get BookkeeperCluster -n {{ .Release.Namespace }} {{ template "bookkeeper.fullname" . }} -o jsonpath='{.spec.version}'`

    echo "BookkeeperCluster replicas: $replicas"
    echo "BookkeeperCluster readyReplicas: $readyReplicas"
    echo "BookkeeperCluster currentVersion: $currentVersion"
    echo "BookkeeperCluster targetVersion: $targetVersion"

    if [ $replicas != $readyReplicas ]; then
        exit 1
    fi

    if [ $currentVersion != $targetVersion ]; then
        exit 2
    fi
---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation, hook-failed
spec:
  backoffLimit: {{ .Values.hooks.backoffLimit }}
  template:
    metadata:
      name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
    spec:
      serviceAccountName: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
      restartPolicy: Never
      containers:
      - name: post-install-upgrade-job
        image: "{{ .Values.hooks.image.repository }}:{{ .Values.hooks.image.tag }}"
        command:
          - /scripts/validations.sh
        volumeMounts:
          - name: sh
            mountPath: /scripts
            readOnly: true
      volumes:
        - name: sh
          configMap:
            name: {{ template "bookkeeper.fullname" . }}-post-install-upgrade
            defaultMode: 0555
